{"version":3,"file":"tab-group.stories.30612759.js","sources":["../../src/components/molecules/tab-group.client.tsx"],"sourcesContent":["import {\n  Children,\n  cloneElement,\n  ComponentProps,\n  createContext,\n  isValidElement,\n  ReactNode,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\n\nimport clsx from 'clsx';\nimport {generateDataAttributes} from '~/lib/utils';\n\ninterface ContextValue {\n  value: string;\n  setValue: (value: string) => void;\n}\n\nconst initialValue: ContextValue = {\n  value: '',\n  setValue: () => {},\n};\n\nconst TabGroupContext = createContext(initialValue);\nconst TabGroupProvider = TabGroupContext.Provider;\nconst useTabGroup = () => useContext(TabGroupContext);\n\ninterface PropsRoot {\n  children?: ReactNode;\n  onChange?: (value: ContextValue['value']) => void;\n  defaultValue: ContextValue['value'];\n}\n\nexport function TabGroupRoot({children, onChange, defaultValue}: PropsRoot) {\n  const [value, setValue] = useState<ContextValue['value']>(defaultValue);\n  const onChangeRef = useRef<typeof onChange>(onChange);\n\n  useEffect(() => {\n    onChangeRef.current = onChange;\n  }, [onChange]);\n\n  useEffect(() => {\n    if (onChangeRef?.current) {\n      onChangeRef.current(value);\n    }\n  }, [value]);\n\n  return (\n    <TabGroupProvider\n      value={{\n        value,\n        setValue,\n      }}\n    >\n      {children}\n    </TabGroupProvider>\n  );\n}\n\nexport interface PropsTabs extends ComponentProps<'div'> {}\n\nexport function TabGroupTabs({children, ...props}: PropsTabs) {\n  const {value, setValue} = useTabGroup();\n\n  return (\n    <div {...props}>\n      <>\n        {Children.map(children, (child) => {\n          if (isValidElement(child)) {\n            return cloneElement(child, {\n              key: `tabs-${value}`,\n              isActive: child.props.value === value,\n              onClick: () => setValue(child.props.value),\n              ...child.props,\n            });\n          }\n        })}\n      </>\n    </div>\n  );\n}\n\ninterface PropsTab extends ComponentProps<'button'> {\n  isActive?: boolean;\n  value: string;\n}\n\nexport function TabGroupTab({isActive, ...props}: PropsTab) {\n  const data = generateDataAttributes({\n    'is-active': isActive ?? undefined,\n  });\n\n  return <button {...props} {...data} />;\n}\n\ninterface PropsPanels extends ComponentProps<'div'> {}\n\nexport function TabGroupPanels({children, ...props}: PropsPanels) {\n  const {value} = useTabGroup();\n  return (\n    <div {...props}>\n      <>\n        {Children.map(children, (child) => {\n          if (isValidElement(child)) {\n            return cloneElement(child, {\n              key: `panels-${value}`,\n              isShow: child.props.value === value,\n              ...child.props,\n            });\n          }\n        })}\n      </>\n    </div>\n  );\n}\n\ninterface PropsPanel extends ComponentProps<'div'> {\n  value: string;\n  isShow?: boolean;\n}\n\nexport function TabGroupPanel({isShow, className, ...props}: PropsPanel) {\n  return (\n    <div\n      className={clsx(!isShow && 'hidden', isShow && 'visible', className)}\n      {...props}\n    />\n  );\n}\n"],"names":["initialValue","TabGroupContext","createContext","TabGroupProvider","useTabGroup","useContext","TabGroupRoot","children","onChange","value","setValue","useState","defaultValue","onChangeRef","useRef","useEffect","_jsx","TabGroupTabs","props","Children","child","isValidElement","cloneElement","TabGroupTab","isActive","data","generateDataAttributes","undefined","TabGroupPanels","TabGroupPanel","isShow","className","clsx"],"mappings":"uUAqBA,MAAAA,EAAA,CAAmC,MAAA,GAC1B,SAAA,IAAA,CACS,CAFiB,EAKnCC,EAAAC,EAAAA,QAAAA,cAAAF,CAAA,EACAG,EAAAF,EAAA,SACAG,EAAA,IAAAC,qBAAAJ,CAAA,EAQO,SAAAK,EAAA,CAAsB,SAAAC,EAACA,SAAAA,EAAUC,aAAAA,CAAX,EAAA,CAC3B,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,QAAA,SAAAC,CAAA,EACAC,EAAAC,iBAAAN,CAAA,EAEAO,OAAAA,EAAAA,QAAAA,UAAAA,IAAAA,CACEF,EAAAA,QAAAA,CAAsBL,EAAAA,CAAAA,CAAAA,CAAAA,EAGxBO,EAAAA,QAAAA,UAAAA,IAAAA,CACEF,GAAA,MAAAA,EAAA,SACEA,EAAAA,QAAAA,CAAAA,CACD,EAAA,CAAAJ,CAAA,CAAA,EAGHO,EAAAb,EAAA,CACE,MAAA,CACS,MAAAM,EACLA,SAAAA,CACAC,EAFK,SAAAH,CADT,CAAA,CASH,CAIM,SAAAU,EAAA,CAAsB,SAAAV,KAACA,CAAD,EAAA,CAC3B,KAAA,CAAM,MAAAE,EAACA,SAAAA,CAAOC,EAAAA,EAAAA,EAEd,OAAAM,EAAA,MAAA,MACWE,SAAAA,EAAAA,EAAAA,CACP,SAAAC,EAAAA,QAAAA,SAAA,IAAAZ,EAAAa,GAAA,CAEI,GAAAC,EAAAA,QAAAA,eAAAD,CAAA,EACE,OAAAE,EAAAA,QAAAA,aAAAF,EAAA,CAA2B,IAAA,QAAAX,IACZA,SAAAA,EAAAA,MAAAA,QAAAA,EACmBA,QAAAA,IAAAA,EAAAA,EAAAA,MAAAA,KAAAA,EACT,GAAAW,EAAA,KACdF,CAAAA,CAEZ,CAAA,CARF,CAAA,CADH,CAAA,CAcL,CAOM,SAAAK,EAAA,CAAqB,SAAAC,KAACA,CAAD,EAAA,CAC1B,MAAAC,EAAAC,EAAA,CAAoC,YAAAF,GAAA,KAAAA,EAAA,MACTG,CAAAA,EAG3B,OAAAX,EAAA,SAAA,MAAmBE,GAAAA,CAAWO,CAAAA,CAC/B,CAIM,SAAAG,EAAA,CAAwB,SAAArB,KAACA,CAAD,EAAA,CAC7B,KAAA,CAAM,MAAAE,CAACA,EAAAA,EAAAA,EACP,OAAAO,EAAA,MAAA,MACWE,SAAAA,EAAAA,EAAAA,CACP,SAAAC,EAAAA,QAAAA,SAAA,IAAAZ,EAAAa,GAAA,CAEI,GAAAC,EAAAA,QAAAA,eAAAD,CAAA,EACE,OAAAE,EAAAA,QAAAA,aAAAF,EAAA,CAA2B,IAAA,UAAAX,IACVA,OAAAA,EAAAA,MAAAA,QAAAA,EACeA,GAAAA,EAAAA,KACrBS,CAAAA,CAEZ,CAAA,CAPF,CAAA,CADH,CAAA,CAaL,CAOM,SAAAW,EAAA,CAAuB,OAAAC,EAACA,UAAAA,KAAQC,CAAT,EAAA,CAC5B,OAAAf,EAAA,MAAA,CACE,UAAAgB,EAAA,CAAAF,GAAA,SAAAA,GAAA,UAAAC,CAAA,EACiB,GAAAb,CACXA,CAAAA,CAGT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}